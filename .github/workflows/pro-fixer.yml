name: Pro Fixer

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  autofix:
    # Run only if CI failed
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Detect package manager
      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.pm.outputs.manager }}

      - name: Setup pnpm
        if: ${{ steps.pm.outputs.manager == 'pnpm' }}
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install deps
        run: |
          if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm install --frozen-lockfile; \
          elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then yarn install --frozen-lockfile; \
          else npm ci; fi

      # ---- SAFE AUTO-FIXES ----
      - name: Prettier write
        run: |
          if jq -re '.scripts["format:write"]' package.json > /dev/null; then \
            if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm run format:write; \
            elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then yarn format:write; \
            else npm run format:write; fi \
          else \
            npx prettier --write . || true; \
          fi

      - name: ESLint --fix
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.cjs ] || [ -f .eslintrc.json ]; then \
            npx eslint . --fix || true; \
          else \
            echo "No ESLint config found, skipping fix"; \
          fi

      # Optional: only if you want Pro Fixer to auto-update failing snapshots
      - name: Update Jest snapshots (optional)
        if: ${{ env.AUTO_UPDATE_SNAPSHOTS == 'true' }}
        env:
          AUTO_UPDATE_SNAPSHOTS: "false" # flip to "true" when you want it
        run: |
          if jq -re '.scripts.test' package.json > /dev/null; then
            npx jest -u || true
          else
            echo "No jest test script, skipping"
          fi

      # Quick verify after fixes
      - name: Re-run lint & typecheck quickly
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.cjs ] || [ -f .eslintrc.json ]; then npx eslint . || true; fi
          if [ -f tsconfig.json ]; then npx tsc -p tsconfig.json --noEmit || true; fi

      # Commit changes if any and open PR
      - name: Create Auto-Fix PR
        uses: peter-evans/create-pull-request@v7
        with:
          branch: fix/pro-fixer-${{ github.run_id }}
          title: "ðŸ¤– Pro Fixer: automated code fixes"
          commit-message: "ðŸ¤– Pro Fixer: apply Prettier + ESLint fixes"
          body: |
            This PR was opened automatically after CI failed.
            Includes:
            - Prettier --write
            - ESLint --fix
            - (optional) Jest snapshot update
          labels: auto-fix
          signoff: true
